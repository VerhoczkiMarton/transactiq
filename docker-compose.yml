services:
  database:
    image: postgres:17
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  application:
    build:
      context: .
      dockerfile: Dockerfile.development
    env_file: .env
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./prisma:/app/prisma
      - ./components.json:/app/components.json
      - ./next.config.ts:/app/next.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./postcss.config.mjs:/app/postcss.config.mjs
    depends_on:
      database:
        condition: service_healthy
    environment:
      - WATCHPACK_POLLING=true
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
